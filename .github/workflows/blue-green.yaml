name: Blue-Green Deployment on EKS

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'App version to deploy (kickstart or scoops)'
        required: true

jobs:
  blue-green-deploy:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: version-update-poc
      REGION: us-east-1
      ECR_REPO: 746669234841.dkr.ecr.us-east-1.amazonaws.com/poc 

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $REGION --name version-update-poc

      - name: Deploy App (kickstart or scoops)
        run: |
          FILE="deployment-${{ github.event.inputs.app }}.yaml"
          VERSION="${{ github.event.inputs.app }}"
          IMAGE="${ECR_REPO}:${{ github.event.inputs.image_tag }}"
          
          sed "s|<IMAGE>|$IMAGE|g" $FILE | \
          kubectl apply -f -

      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment ${{ github.event.inputs.app }}

      - name: Health check
        run: |
          POD=$(kubectl get pods -l app=version-update,version=${{ github.event.inputs.app }} -o jsonpath="{.items[0].metadata.name}")
          kubectl exec "$POD" -- curl -s localhost:80 || exit 1

      - name: Switch Service to ${{ github.event.inputs.app }}
        run: |
          kubectl patch service version-update-service \
            -p "{\"spec\":{\"selector\":{\"app\":\"version-update\",\"version\":\"${{ github.event.inputs.app }}\"}}}"

      - name: Show Ingress URL
        run: kubectl get ingress -o wide || true
