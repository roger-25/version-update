name: Blue-Green Deployment on EKS

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (v1 or v2)'
        required: true
        default: 'v1'

jobs:
  blue-green-deploy:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: version-update-poc
      REGION: us-east-1
      ECR_REPO: 746669234841.dkr.ecr.us-east-1.amazonaws.com/poc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME

      - name: Set App Based on Version
        id: set-app
        run: |
          if [ "${{ github.event.inputs.version }}" == "v1" ]; then
            echo "app=kickstart" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.version }}" == "v2" ]; then
            echo "app=scoops" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Invalid version input (use v1 or v2)"
            exit 1
          fi

      - name: Deploy App
        run: |
          FILE="deployment-${{ steps.set-app.outputs.app }}.yaml"
          IMAGE="${ECR_REPO}:${{ steps.set-app.outputs.app }}"
          sed "s|<IMAGE>|$IMAGE|g" $FILE | kubectl apply -f -

      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment version-update

      - name: Health Check
        run: |
          POD=$(kubectl get pods -l app=version-update,version=${{ steps.set-app.outputs.app }} -o jsonpath="{.items[0].metadata.name}")
          echo "Found pod: $POD"
          kubectl exec "$POD" -- curl -s localhost:80 || exit 1

      - name: Switch Service
        run: |
          kubectl patch service version-update-service \
            -p "{\"spec\":{\"selector\":{\"app\":\"version-update\",\"version\":\"${{ steps.set-app.outputs.app }}\"}}}"

      - name: Show Ingress URL
        run: |
          kubectl get ingress || true
